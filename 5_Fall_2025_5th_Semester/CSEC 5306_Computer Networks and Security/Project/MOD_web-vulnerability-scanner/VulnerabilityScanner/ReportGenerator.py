# import time

# class ReportGenerator:
#     # def __init__(self, givenurl):
#     #     self.filename = "audit_" + time.strftime("%Y%m%d-%H%M")
#     #     self.url = givenurl
#     #     ReportGenerator.__create_report(self)
        
#     def __init__(self, givenurl):
#         self.filename = "audit_" + time.strftime("%Y%m%d-%H%M") + ".txt"  # Add .txt extension
#         self.url = givenurl
#         ReportGenerator.__create_report(self)

#     # private method for report creation
#     def __create_report(self):
#         """
#         Create report file
#         """
#         f = open(self.filename, "w")
#         f.write("Audit for site: " + self.url + ", performed at: " + time.strftime("%Y%m%d-%H%M")
#                 + " [Year+Month+Day-Hour+Minute] " + "\n")
#         f.close()

#     # method for writing to report file
#     def write_to_report(self, text):
#         """
#         Write to report file
#         Args:
#             text: Text to be put in report
#         """
#         f = open(self.filename, "a")
#         f.write(text)
#         f.close()


import time

class ReportGenerator:
    def __init__(self, givenurl):
        """
        Initialize the ReportGenerator with a given URL.
        Creates a filename with a timestamp and a .txt extension.
        """
        self.filename = "audit_" + time.strftime("%Y%m%d-%H%M") + ".txt"  # Add .txt extension
        self.url = givenurl
        ReportGenerator.__create_report(self)

    # private method for report creation
    def __create_report(self):
        """
        Create the initial report file with a header.
        """
        with open(self.filename, "w") as f:
            f.write("Audit for site: " + self.url + ", performed at: " + time.strftime("%Y%m%d-%H%M")
                    + " [Year+Month+Day-Hour+Minute] " + "\n")

    # method for writing to report file
    def write_to_report(self, text):
        """
        Append text to the report file.
        Args:
            text: Text to be added to the report.
        """
        with open(self.filename, "a") as f:
            f.write(text)